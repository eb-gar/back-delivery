generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SuperAdmin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Restaurants {
  id            Int      @id @default(autoincrement())
  nombre        String
  propietario   String
  direccion     String?
  logoUrl        String?   
  primaryColor   String    @default("#3880ff")
  secondaryColor String    @default("#3dc2ff")
  creadoAt      DateTime @default(now())

  RestaurantAdmin RestaurantAdmin[]

  Dish Dish[]
}

model RestaurantAdmin {
  id           Int         @id @default(autoincrement())
  email        String      @unique
  password     String
  restaurant   Restaurants @relation(fields: [restaurantId], references: [id])
  restaurantId Int
}

model Dish {
  id           Int          @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  imageUrl     String?
  createdAt    DateTime     @default(now())
  restaurant   Restaurants  @relation(fields: [restaurantId], references: [id])
  restaurantId Int
}

model Order {
  id           String      @id @default(uuid())
  customerName String
  address      String
  status       OrderStatus
  createdAt    DateTime    @default(now())
  motorizedId  String?
  motorized    Motorized?  @relation(fields: [motorizedId], references: [id])

  Client Client[]
}

enum OrderStatus {
  PENDING
  ASSIGNED
  DELIVERED
}

model Client {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  orders       Order[]
  createdAt DateTime @default(now())
}

model Motorized {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  phone     String?
  createdAt DateTime @default(now())
  orders    Order[]
}